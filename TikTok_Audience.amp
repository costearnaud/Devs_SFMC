<script runat="server">
Platform.Load("core", "1.1.1");

var token = "ABCDEFG";
var advertiser_id = "7341004018493325314";
var sourceDEKey = "Tiktok_FR";
var idType = "EMAIL_SHA256";

var config = {
    name: sourceDEKey,
    cols: ["email"]
}

var body = {
    "advertiser_ids": [advertiser_id],
    "data": []
}

var prox = new Script.Util.WSProxy();
var data = prox.retrieve("DataExtensionObject[" + config.name + "]", config.cols);

var audienceId = createAudience();

for (var i = 0; i < data.Results.length; i++) {
    var row = data.Results[i];
    var email = row.Properties[0].Value;
    Variable.SetValue("email", email);
    var ampscript = "\%\%[Output(SHA256(@email))]\%\%";
    var emailHashed = Platform.Function.TreatAsContent(ampscript);
    Write("</br>Email hashed: "+emailHashed);

    body.data.push({
        "id": emailHashed,
        "id_type": idType,
        "audience_ids": [audienceId]
    })
}

Write("</br>Body created: "+Stringify(body));

function createAudience() {
    Write("</br></br>function createAudience");
    // Check input
    if (!token) { return undefined }

    // Do API Call
    var url = "https://business-api.tiktok.com/open_api/v1.3/segment/audience";
    var auth = 'Bearer ' + token;
    var req = new Script.Util.HttpRequest(url);
    req.emptyContentHandling = 0;
    req.retries = 2;
    req.continueOnError = true;
    req.contentType = "application/json";
    req.setHeader("Authorization", auth);
    req.method = "POST";
    req.postData = Stringify({
        "custom_audience_name": "firstAudience",
        "advertiser_id": advertiser_id,
        "action": "create"
    });
    try {
        var resp = req.send();
        var reponse = resp.content
        Write("</br>createAudience > reponse: "+reponse);
        var audience = 'KO'
        if (reponse.hasOwnProperty('data')) {
            audience = reponse.data.audience_id;
            //Write("</br>createAudience > reponse.data tested");
        }
        return audience;
    } catch(err) {
        Write("</br>createAudience > catch error: "+err);
        return 'Error';
    }
}
</script>